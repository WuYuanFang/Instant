<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kevin.instant.mapper.IBlogDao">
  <resultMap id="BaseResultMap" type="com.kevin.instant.entity.Blog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="type_id" jdbcType="VARCHAR" property="typeId" />
    <result column="is_instant" jdbcType="INTEGER" property="isInstant" />
    <result column="instant_time" jdbcType="VARCHAR" property="instantTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="last_update_user" jdbcType="VARCHAR" property="lastUpdateUser" />
    <result column="last_update_time" jdbcType="VARCHAR" property="lastUpdateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, content, user_id, type_id, is_instant, instant_time, is_delete, create_user, 
    create_time, last_update_user, last_update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from blog
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.kevin.instant.entity.Blog" useGeneratedKeys="true">
    insert into blog (id, title, content, user_id,
      type_id, is_instant, instant_time, 
      is_delete, create_user, create_time, 
      last_update_user, last_update_time)
    values (uuid() ,#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
      #{typeId,jdbcType=VARCHAR}, #{isInstant,jdbcType=INTEGER}, #{instantTime,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{lastUpdateUser,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.kevin.instant.entity.Blog" useGeneratedKeys="true">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="isInstant != null">
        is_instant,
      </if>
      <if test="instantTime != null">
        instant_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateUser != null">
        last_update_user,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="isInstant != null">
        #{isInstant,jdbcType=INTEGER},
      </if>
      <if test="instantTime != null">
        #{instantTime,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateUser != null">
        #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kevin.instant.entity.Blog">
    update blog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="isInstant != null">
        is_instant = #{isInstant,jdbcType=INTEGER},
      </if>
      <if test="instantTime != null">
        instant_time = #{instantTime,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateUser != null">
        last_update_user = #{lastUpdateUser,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kevin.instant.entity.Blog">
    update blog
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=VARCHAR},
      is_instant = #{isInstant,jdbcType=INTEGER},
      instant_time = #{instantTime,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      last_update_user = #{lastUpdateUser,jdbcType=VARCHAR},
      last_update_time = #{lastUpdateTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>